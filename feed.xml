<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gitjmc.github.io/</id><title>JMC-memo</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2025-05-17T22:43:18-04:00</updated> <author> <name>Jerbi Mohamed Chamseddine</name> <uri>https://gitjmc.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://gitjmc.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://gitjmc.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2025 Jerbi Mohamed Chamseddine </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How to secure Form in Qualtrics</title><link href="https://gitjmc.github.io/posts/secureFormQualtrics/" rel="alternate" type="text/html" title="How to secure Form in Qualtrics" /><published>2025-05-16T07:45:00-04:00</published> <updated>2025-05-17T22:42:46-04:00</updated> <id>https://gitjmc.github.io/posts/secureFormQualtrics/</id> <content src="https://gitjmc.github.io/posts/secureFormQualtrics/" /> <author> <name>{"name"=>nil, "link"=>nil}</name> </author> <category term="Corpo" /> <summary> post 1 To create a public Qualtrics survey while ensuring robust protection against bots, fraudulent responses, and unauthorized access, you can leverage several security features. Since the survey is public (likely using an anonymous link), balancing accessibility with security is key. Below are the available options to protect your survey, tailored to a public distribution context: 1. Bot a... </summary> </entry> <entry><title>Dokerize mosquitto throw traefik</title><link href="https://gitjmc.github.io/posts/dockerize-traefik-mosquitto/" rel="alternate" type="text/html" title="Dokerize mosquitto throw traefik" /><published>2025-04-30T12:35:00-04:00</published> <updated>2025-04-30T12:35:00-04:00</updated> <id>https://gitjmc.github.io/posts/dockerize-traefik-mosquitto/</id> <content src="https://gitjmc.github.io/posts/dockerize-traefik-mosquitto/" /> <author> <name>{"name"=>nil, "link"=>nil}</name> </author> <category term="Docker" /> <summary> Yes, it is possible to dockerize a Mosquitto MQTT broker with TLS (Transport Layer Security) using Traefik as a reverse proxy to handle TLS termination and certificate management (e.g., via Let’s Encrypt). This setup simplifies securing MQTT communication by offloading TLS handling to Traefik, allowing Mosquitto to operate on unencrypted ports internally while exposing secure endpoints external... </summary> </entry> <entry><title>Secure connection between ESP32 and a Mosquitto MQTT broker And how Certificate works</title><link href="https://gitjmc.github.io/posts/secure-connection-between-esp32-mosquitto/" rel="alternate" type="text/html" title="Secure connection between ESP32 and a Mosquitto MQTT broker And how Certificate works" /><published>2025-04-30T10:35:00-04:00</published> <updated>2025-04-30T10:35:00-04:00</updated> <id>https://gitjmc.github.io/posts/secure-connection-between-esp32-mosquitto/</id> <content src="https://gitjmc.github.io/posts/secure-connection-between-esp32-mosquitto/" /> <author> <name>{"name"=>nil, "link"=>nil}</name> </author> <category term="Design" /> <summary> Secure connection between ESP32 and a Mosquitto MQTT broker To secure the connection between an ESP32 and a Mosquitto MQTT broker, you need to implement encryption (TLS/SSL) and, optionally, authentication (username/password or client certificates). Below are the steps to achieve a secure connection: 1. Set Up Mosquitto Broker with TLS/SSL Mosquitto needs to be configured to use TLS for enc... </summary> </entry> <entry><title>Functional and application compoenents - Qualtrics (G)</title><link href="https://gitjmc.github.io/posts/fuctional-and-application-component/" rel="alternate" type="text/html" title="Functional and application compoenents - Qualtrics (G)" /><published>2025-04-30T08:35:00-04:00</published> <updated>2025-04-30T08:35:00-04:00</updated> <id>https://gitjmc.github.io/posts/fuctional-and-application-component/</id> <content src="https://gitjmc.github.io/posts/fuctional-and-application-component/" /> <author> <name>{"name"=>nil, "link"=>nil}</name> </author> <category term="Design" /> <summary> Decomposing SaaS Functional and application compoenents Application components Decomposing a Software-as-a-Service (SaaS) platform like Qualtrics into its application components and functional components involves breaking down its architecture and capabilities into modular, logical units. Qualtrics is a complex experience management platform that provides survey creation, distribution, data c... </summary> </entry> <entry><title>Mosquitto with Docker Compose, Base Authentication, DuckDNS and Let's Encrypt (done)</title><link href="https://gitjmc.github.io/posts/mosquitto-tls-done-copy/" rel="alternate" type="text/html" title="Mosquitto with Docker Compose, Base Authentication, DuckDNS and Let's Encrypt (done)" /><published>2025-04-26T07:35:00-04:00</published> <updated>2025-04-26T07:35:00-04:00</updated> <id>https://gitjmc.github.io/posts/mosquitto-tls-done-copy/</id> <content src="https://gitjmc.github.io/posts/mosquitto-tls-done-copy/" /> <author> <name>{"name"=>nil, "link"=>nil}</name> </author> <category term="DEV" /> <summary> Base Authentication &amp;amp; Let’s Encrypt (DuckDNS) Dockerize Mosquitto with duckdns, base authentication and letsencrypt. Prerequisites A domain pointed to your droplet (via DuckDNS) Docker and Docker Compose installed Ports 80, 8883, 9001, and 1883 open in your firewall Step 1: Set Up Besmellah! Step 3: step 1 compose.yaml version 1 run mosquitto on 1883 wihout base authentication... </summary> </entry> </feed>
